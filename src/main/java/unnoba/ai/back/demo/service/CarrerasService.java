package unnoba.ai.back.demo.service;

import org.springframework.stereotype.Service;
import unnoba.ai.back.demo.constants.UnnobaUrls;
import unnoba.ai.back.demo.utils.ScrapingUtils;

import java.io.IOException;
import java.util.Set;

@Service
public class CarrerasService {

  private final ScrapingService scrapingService;

  public CarrerasService(ScrapingService scrapingService) {
    this.scrapingService = scrapingService;
  }

  // Carreras de Inform√°tica
  public String obtenerIngenieriaInformatica() throws IOException {
    Set<String> enlaces = scrapingService.procesarCarrera(UnnobaUrls.INGENIERIA_INFORMATICA);
    return ScrapingUtils.extraerTextoDeUrls(enlaces);
  }

  public String obtenerLicenciaturaSistemas() throws IOException {
    Set<String> enlaces = scrapingService.procesarCarrera(UnnobaUrls.LICENCIATURA_SISTEMAS);
    return ScrapingUtils.extraerTextoDeUrls(enlaces);
  }

  public String obtenerAnalistaSistemas() throws IOException {
    Set<String> enlaces = scrapingService.procesarCarrera(UnnobaUrls.ANALISTA_SISTEMAS);
    return ScrapingUtils.extraerTextoDeUrls(enlaces);
  }

  public String obtenerTecnicaturaApps() throws IOException {
    Set<String> enlaces = scrapingService.procesarCarrera(UnnobaUrls.TECNICATURA_APPS);
    return ScrapingUtils.extraerTextoDeUrls(enlaces);
  }

  // Carreras de Dise√±o
  public String obtenerDise√±oGrafico() throws IOException {
    Set<String> enlaces = scrapingService.procesarCarrera(UnnobaUrls.DISE√ëO_GRAFICO);
    return ScrapingUtils.extraerTextoDeUrls(enlaces);
  }

  public String obtenerDise√±oIndumentaria() throws IOException {
    Set<String> enlaces = scrapingService.procesarCarrera(UnnobaUrls.DISE√ëO_INDUMENTARIA);
    return ScrapingUtils.extraerTextoDeUrls(enlaces);
  }

  public String obtenerDise√±oIndustrial() throws IOException {
    Set<String> enlaces = scrapingService.procesarCarrera(UnnobaUrls.DISE√ëO_INDUSTRIAL);
    return ScrapingUtils.extraerTextoDeUrls(enlaces);
  }

  // Carreras de Salud
  public String obtenerMedicina() throws IOException {
    Set<String> enlaces = scrapingService.procesarCarrera(UnnobaUrls.MEDICINA);
    return ScrapingUtils.extraerTextoDeUrls(enlaces);
  }

  public String obtenerEnfermeria() throws IOException {
    Set<String> enlaces = scrapingService.procesarCarrera(UnnobaUrls.ENFERMERIA);
    return ScrapingUtils.extraerTextoDeUrls(enlaces);
  }

  // Carreras de Derecho y Econ√≥micas
  public String obtenerAbogacia() throws IOException {
    Set<String> enlaces = scrapingService.procesarCarrera(UnnobaUrls.ABOGACIA);
    return ScrapingUtils.extraerTextoDeUrls(enlaces);
  }

  public String obtenerContadorPublico() throws IOException {
    Set<String> enlaces = scrapingService.procesarCarrera(UnnobaUrls.CONTADOR_PUBLICO);
    return ScrapingUtils.extraerTextoDeUrls(enlaces);
  }

  public String obtenerLicenciaturaAdministracion() throws IOException {
    Set<String> enlaces = scrapingService.procesarCarrera(UnnobaUrls.LICENCIATURA_ADMINISTRACION);
    return ScrapingUtils.extraerTextoDeUrls(enlaces);
  }

  // Carreras de Ingenier√≠a
  public String obtenerAgronomia() throws IOException {
    Set<String> enlaces = scrapingService.procesarCarrera(UnnobaUrls.AGRONOMIA);
    return ScrapingUtils.extraerTextoDeUrls(enlaces);
  }

  public String obtenerIngenieriaMecatronica() throws IOException {
    Set<String> enlaces = scrapingService.procesarCarrera(UnnobaUrls.INGENIERIA_MECATRONICA);
    return ScrapingUtils.extraerTextoDeUrls(enlaces);
  }

  public String obtenerIngenieriaIndustrial() throws IOException {
    Set<String> enlaces = scrapingService.procesarCarrera(UnnobaUrls.INGENIERIA_INDUSTRIAL);
    return ScrapingUtils.extraerTextoDeUrls(enlaces);
  }

  public String obtenerIngenieriaMecanica() throws IOException {
    Set<String> enlaces = scrapingService.procesarCarrera(UnnobaUrls.INGENIERIA_MECANICA);
    return ScrapingUtils.extraerTextoDeUrls(enlaces);
  }

  public String obtenerIngenieriaAlimentos() throws IOException {
    Set<String> enlaces = scrapingService.procesarCarrera(UnnobaUrls.INGENIERIA_ALIMENTOS);
    return ScrapingUtils.extraerTextoDeUrls(enlaces);
  }

  // Carreras de Ciencias
  public String obtenerLicenciaturaGenetica() throws IOException {
    Set<String> enlaces = scrapingService.procesarCarrera(UnnobaUrls.LICENCIATURA_GENETICA);
    return ScrapingUtils.extraerTextoDeUrls(enlaces);
  }

  // Tecnicaturas
  public String obtenerTecnicaturaMantenimiento() throws IOException {
    Set<String> enlaces = scrapingService.procesarCarrera(UnnobaUrls.TECNICATURA_MANTENIMIENTO);
    return ScrapingUtils.extraerTextoDeUrls(enlaces);
  }

  public String obtenerTecnicaturaPymes() throws IOException {
    Set<String> enlaces = scrapingService.procesarCarrera(UnnobaUrls.TECNICATURA_PYMES);
    return ScrapingUtils.extraerTextoDeUrls(enlaces);
  }

  public String obtenerTecnicaturaPublica() throws IOException {
    Set<String> enlaces = scrapingService.procesarCarrera(UnnobaUrls.TECNICATURA_PUBLICA);
    return ScrapingUtils.extraerTextoDeUrls(enlaces);
  }

  public String obtenerTecnicaturaAlimentos() throws IOException {
    Set<String> enlaces = scrapingService.procesarCarrera(UnnobaUrls.TECNICATURA_ALIMENTOS);
    return ScrapingUtils.extraerTextoDeUrls(enlaces);
  }

  // Informaci√≥n general
  public String obtenerRegularidadEstudiantes() {
    return """
        ‚úÖ **REGULARIDAD DE ESTUDIANTES - UNNOBA**

        **¬øNecesito ser alumno regular para inscribirme a materias?**
        S√≠, para poder inscribirte a materias es necesario tener la condici√≥n de alumno regular.

        **¬øCu√°ndo y c√≥mo se verifica la regularidad?**
        La regularidad se verifica a fines de marzo de cada a√±o. Por ejemplo, la regularidad 2025 se eval√∫a considerando el per√≠odo comprendido entre marzo de 2024 y marzo de 2025.
        Para mantener la regularidad, es necesario sumar al menos **4 puntos** durante ese per√≠odo.

        **¬øC√≥mo se suman puntos para mantener la regularidad?**
        Pod√©s sumar puntos de las siguientes maneras:
        ‚Ä¢ Cada materia cursada y aprobada suma **1 punto**.
        ‚Ä¢ Cada examen final aprobado suma **2 puntos**.
        ‚Ä¢ Se pueden combinar cursadas y finales, siempre que se llegue a 4 puntos como m√≠nimo.

        *Ejemplos:*
        - Cursar y aprobar 4 materias = 4 puntos.
        - Cursar 2 materias (2 puntos) y aprobar 1 final (2 puntos) = 4 puntos.
        - Aprobar 2 ex√°menes finales = 4 puntos.

        **¬øQu√© pasa si no llego a los 4 puntos?**
        Si no alcanz√°s los 4 puntos requeridos en el per√≠odo correspondiente, perd√©s la condici√≥n de alumno regular.

        **¬øPuedo seguir cursando si pierdo la regularidad?**
        S√≠, pod√©s seguir cursando. Para eso deb√©s **reinscribirte a la carrera**.
        En ese caso, manten√©s todas las materias cursadas y aprobadas anteriormente.

        **¬øCu√°ntas veces puedo reinscribirme?**
        Pod√©s reinscribirte hasta **3 veces**.
        Si super√°s ese l√≠mite, perd√©s todas las materias aprobadas y ten√©s que inscribirte nuevamente desde cero en la carrera.
        """;
  }

  public String obtenerInformacionGeneral() {
    return "Soy un asistente virtual de la UNNOBA, actualmente en desarrollo. Mi prop√≥sito es ayudarte a resolver dudas sobre la universidad, proporcionando informaci√≥n sobre carreras, tr√°mites, fechas importantes y otros temas de inter√©s. ¬°No dudes en preguntar! üòä";
  }
}